// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shared;

#nullable disable

namespace PlaylistCreator.Migrations
{
    [DbContext(typeof(UltrastarContext))]
    [Migration("20220313133213_Playlist")]
    partial class Playlist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("Shared.UsScore", b =>
                {
                    b.Property<long?>("Date")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Player")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SongId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("SongId");

                    b.ToTable("us_scores", (string)null);
                });

            modelBuilder.Entity("Shared.UsSong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LyricActualFillColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("LyricActualOutlineColor")
                        .HasColumnType("TEXT");

                    b.Property<long?>("LyricAlpha")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LyricNextFillColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("LyricNextOutlineColor")
                        .HasColumnType("TEXT");

                    b.Property<long?>("LyricPosition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LyricSingFillColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("LyricSingOutlineColor")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TimesPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("VideoHeight")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("VideoRatioAspect")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("VideoWidth")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("us_songs", (string)null);
                });

            modelBuilder.Entity("Shared.UsStatisticsInfo", b =>
                {
                    b.Property<long?>("ResetTime")
                        .HasColumnType("INTEGER");

                    b.ToTable("us_statistics_info", (string)null);
                });

            modelBuilder.Entity("Shared.UsToolsPlaylist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UsToolsPlaylists");
                });

            modelBuilder.Entity("Shared.UsToolsSong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TxtPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UsToolsSongs");
                });

            modelBuilder.Entity("Shared.UsUsersInfo", b =>
                {
                    b.Property<long>("AutoMode")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AutoPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AutoScoreEasy")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AutoScoreHard")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AutoScoreMedium")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SendSavePlayer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("WebId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("WebID");

                    b.ToTable("us_users_info", (string)null);
                });

            modelBuilder.Entity("Shared.UsWeb", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("us_webs", (string)null);
                });

            modelBuilder.Entity("Shared.UsWebsStat", b =>
                {
                    b.Property<long?>("MaxScore0")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Max_Score_0");

                    b.Property<long?>("MaxScore1")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Max_Score_1");

                    b.Property<long?>("MaxScore2")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Max_Score_2");

                    b.Property<long?>("MediaScore0")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Media_Score_0");

                    b.Property<long?>("MediaScore1")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Media_Score_1");

                    b.Property<long?>("MediaScore2")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Media_Score_2");

                    b.Property<long>("SongId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SongID");

                    b.Property<string>("UserScore0")
                        .HasColumnType("TEXT")
                        .HasColumnName("User_Score_0");

                    b.Property<string>("UserScore1")
                        .HasColumnType("TEXT")
                        .HasColumnName("User_Score_1");

                    b.Property<string>("UserScore2")
                        .HasColumnType("TEXT")
                        .HasColumnName("User_Score_2");

                    b.Property<long>("WebId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("WebID");

                    b.ToTable("us_webs_stats", (string)null);
                });

            modelBuilder.Entity("UsToolsPlaylistUsToolsSong", b =>
                {
                    b.Property<long>("PlaylistsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SongsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaylistsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("UsToolsPlaylistUsToolsSong");
                });

            modelBuilder.Entity("Shared.UsScore", b =>
                {
                    b.HasOne("Shared.UsSong", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Song");
                });

            modelBuilder.Entity("UsToolsPlaylistUsToolsSong", b =>
                {
                    b.HasOne("Shared.UsToolsPlaylist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.UsToolsSong", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
